# 1 Crear una base de datos llamada ecommerce.
use ecommerce


# 2 Crear dos colecciones: mensajes y productos.

db.createCollection('products')
db.createCollection('messages')

# 3 Agregar 10 documentos con valores distintos a las colecciones mensajes y productos

    db.products.insertMany([
        {title : 'Calculator', description: 'a', price : 110, stock: 5, thumbnail : 'https://cdn3.iconfinder.com/data/icons/education-209/64/calculator-math-tool-school-256.png'}, 
        {title : 'Clock', description: 'b', price : 200, stock: 5, thumbnail : 'https://cdn4.iconfinder.com/data/icons/small-n-flat/24/clock-128.png'},
        {title : 'Pants', description: 'c', price : 400, stock: 5, thumbnail : 'https://cdn3.iconfinder.com/data/icons/remixicon-others/24/shirt-fill-128.png'},
        {title : 'Shoes', description: 'd', price : 300, stock: 5, thumbnail : 'https://cdn4.iconfinder.com/data/icons/fashion-industry-set/88/Di-128.png'},
        {title : 'Car', description: 'e', price : 500, stock: 5, thumbnail : 'url6'},
        {title : 'Car2', description: 'e', price : 500, stock: 5, thumbnail : 'ur20'},
        {title : 'Satellite', description: 'f', price : 600, stock: 5, thumbnail : 'url7'},
        {title : 'Spaceship', description: 'g', price : 2700, stock: 5, thumbnail : 'url8'}, 
        {title : 'Microscope', description: 'h', price : 3800, stock: 5, thumbnail : 'url9'},
        {title : 'Wine', description: 'i', price : 1900, stock: 5, thumbnail : 'url10'}
    ])


    db.messages.insertMany([
    { text: 'Good', author: 'Susan' },
    { text: 'Goodbye', author: 'John' },
    { text: 'Cool', author: 'Paul' },
    { text: 'Ok', author: 'Peter' },
    { text: 'syl', author: 'Jamie' },
    { text: 'fyi', author: 'Jonah' },
    { text: 'It was a beatiful day in the West Coast', author: 'Duncan' },
    { text: 'Who could have thought about that', author: 'Erica' },
    { text: 'Hello', author: 'Duncan' },
    { text: 'Bye', author: 'Erica' }
])

# 4 Listar todos los documentos en cada colección.
db.products.find()
db.messages.find()

# 5 Mostrar la cantidad de documentos almacenados en cada una de ellas.
db.products.estimatedDocumentCount()
db.messages.estimatedDocumentCount()

# 6 Agregar un producto más en la colección de productos 
 db.products.insertOne({title : 'Beer', description: 'j', price : 5000, stock: 5, thumbnail : 'url11'})

# Realizar una consulta por nombre de producto específico:
 db.products.find({ price: { $lt: 1000 } })
db.products.find({ $and: [{ price: { $gte: 1000 } }, { price: { $lte: 3000 } }] })
db.products.find({ price: { $gt: 3000 } })
db.products.find().sort({ price: 1 }).skip(2).limit(1)

    # Hacer una actualización sobre todos los productos, agregando el campo stock a todos ellos con un valor de 100.
db.products.updateMany({}, { $set: { extraStock: 100 } })

    # Cambiar el stock a cero de los productos con precios mayores a 4000 pesos. 
db.products.updateMany({ price: { $gt: 4000 } }, { $set: { stock: 0 } })

    # Borrar los productos con precio menor a 1000 pesos 
db.products.deleteMany({ price: { $lt: 1000 } })

# Crear un usuario 'pepe' clave: 'asd456' que sólo pueda leer la base de datos ecommerce. Verificar que pepe no pueda cambiar la información.
db.createUser({ user: 'pepe', pwd: 'asd456', roles: [{ role: 'read', db: 'ecommerce' }] })
mongo - u pepe - p asd456
    # Check that it cannot modify data
dd.products.insertOne({ name: 'Wallet' }) => not authorized